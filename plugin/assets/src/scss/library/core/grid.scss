/* ============================================================================
  Grid Setup
    1. Allow the grid system to be used on lists.
    2. Remove any margins and paddings that might affect the grid system.
    3. Apply a negative `margin-left` to negate the columns' gutters.
============================================================================== */
.grid {
  @include clearfix();
  margin: 0;
  margin-left: -$grid-gutter;
  padding: 0;
  list-style: none;
  position: relative; // Helps Quickview

  @include media-query($small) {
    margin-left: -$grid-gutter-mobile;
  }
}

.grid__item {
  float: left;
  width: 100%;
  padding-left: $grid-gutter;

  @include media-query($small) {
    padding-left: $grid-gutter-mobile;
  }

  &[class*='--push'] {
    position: relative;
  }
}

.grid--view-items {
  overflow: visible;
  margin-bottom: -$section-spacing-small;
}

.grid-view-item {
  margin: 0 auto $section-spacing-small;
  text-align: center;

  transition: all 0.5s ease-in-out;

  .custom__item & {
    margin-bottom: 0;
  }

  .grid-view-item_hover-el {
    visibility: hidden;
  }

  &--force-hover,
  &:hover {
    .grid-view-item_hover-el {
      visibility: visible;
    }

    @include media-query($medium-up) {
      border-color: $gray;
    }
  }
}

.grid-view-item__overlay {
  position: relative;
  display: block;
  width: 100%;
  height: 100%;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

.grid-view-item__title {
  margin-bottom: 0;
  color: $color-text;

  @if $font-bold-titles {
    font-weight: $font-weight-bold;
  }
}

.grid-view-item__meta {
  margin-top: 8px;
}

.grid-view-item__link {
  display: block;
}

.grid-view-item__vendor {
  margin-top: 4px;
  color: $color-body-text;
  font-size: em($font-size-base - 2px);
  text-transform: uppercase;

  @include media-query($small) {
    font-size: em($font-size-base - 3px);
  }
}

.grid-view-item__image-wrapper {
  position: relative;
  width: 100%;
  margin: 0 auto;
}

.grid-view-item__image {
  display: block;
  width: 100%;
  margin: 0 auto;

  .grid-view-item__image-wrapper & {
    position: absolute;
    top: 0;
  }

  .grid-view-item--sold-out & {
    opacity: 0.5;
  }

  &.lazyload {
    opacity: 0;
  }

  .ie9 & {
    opacity: 1;
  }
}

@include media-query($small) {
  .grid-view-item__title,
  .grid-view-item__meta {
    font-size: em($font-size-base - 1px);
  }
}

.grid--table {
  display: table;
  width: 100%;
  table-layout: fixed;

  > .grid__item {
    display: table-cell;
    vertical-align: middle;
    float: none;
  }
}

.grid--no-gutters {
  margin-left: 0;

  .grid__item {
    padding-left: 0;
  }
}

.grid--half-gutters {
  margin-left: -($grid-gutter / 2);

  > .grid__item {
    padding-left: $grid-gutter / 2;
  }
}

.grid--double-gutters {
  margin-left: -($grid-gutter * 2);

  > .grid__item {
    padding-left: $grid-gutter * 2;
  }
}

.grid--flush-bottom {
  overflow: auto;
  margin-bottom: -$section-spacing;

  > .grid__item {
    margin-bottom: $section-spacing;
  }
}

/* ============================================================================
  Reversed grids allow you to structure your source in the opposite
  order to how your rendered layout will appear.
============================================================================== */
.grid--rev {
  direction: rtl;
  text-align: left;

  > .grid__item {
    float: right;
    direction: ltr;
    text-align: left;
  }
}

/* ============================================================================
  Grid Columns
    - Create width classes, prepended by the breakpoint name.
============================================================================== */
// sass-lint:disable brace-style empty-line-between-blocks

@mixin grid-column-generator($grid-breakpoint-type: '') {

  /* Whole */
  .#{$grid-breakpoint-type}one-whole {
    width: 100%;
  }

  /* Halves */
  .#{$grid-breakpoint-type}one-half {
    width: percentage(1 / 2);
  }

  /* Thirds */
  .#{$grid-breakpoint-type}one-third {
    width: percentage(1 / 3);
  }

  .#{$grid-breakpoint-type}two-thirds {
    width: percentage(2 / 3);
  }

  /* Quarters */
  .#{$grid-breakpoint-type}one-quarter {
    width: percentage(1 / 4);
  }

  .#{$grid-breakpoint-type}two-quarters {
    width: percentage(2 / 4);
  }

  .#{$grid-breakpoint-type}three-quarters {
    width: percentage(3 / 4);
  }

  /* Fifths */
  .#{$grid-breakpoint-type}one-fifth {
    width: percentage(1 / 5);
  }

  .#{$grid-breakpoint-type}two-fifths {
    width: percentage(2 / 5);
  }

  .#{$grid-breakpoint-type}three-fifths {
    width: percentage(3 / 5);
  }

  .#{$grid-breakpoint-type}four-fifths {
    width: percentage(4 / 5);
  }

  /* Sixths */
  .#{$grid-breakpoint-type}one-sixth {
    width: percentage(1 / 6);
  }

  .#{$grid-breakpoint-type}two-sixths {
    width: percentage(2 / 6);
  }

  .#{$grid-breakpoint-type}three-sixths {
    width: percentage(3 / 6);
  }

  .#{$grid-breakpoint-type}four-sixths {
    width: percentage(4 / 6);
  }

  .#{$grid-breakpoint-type}five-sixths {
    width: percentage(5 / 6);
  }

  /* Eighths */
  .#{$grid-breakpoint-type}one-eighth {
    width: percentage(1 / 8);
  }

  .#{$grid-breakpoint-type}two-eighths {
    width: percentage(2 / 8);
  }

  .#{$grid-breakpoint-type}three-eighths {
    width: percentage(3 / 8);
  }

  .#{$grid-breakpoint-type}four-eighths {
    width: percentage(4 / 8);
  }

  .#{$grid-breakpoint-type}five-eighths {
    width: percentage(5 / 8);
  }

  .#{$grid-breakpoint-type}six-eighths {
    width: percentage(6 / 8);
  }

  .#{$grid-breakpoint-type}seven-eighths {
    width: percentage(7 / 8);
  }

  /* Tenths */
  .#{$grid-breakpoint-type}one-tenth {
    width: percentage(1 / 10);
  }

  .#{$grid-breakpoint-type}two-tenths {
    width: percentage(2 / 10);
  }

  .#{$grid-breakpoint-type}three-tenths {
    width: percentage(3 / 10);
  }

  .#{$grid-breakpoint-type}four-tenths {
    width: percentage(4 / 10);
  }

  .#{$grid-breakpoint-type}five-tenths {
    width: percentage(5 / 10);
  }

  .#{$grid-breakpoint-type}six-tenths {
    width: percentage(6 / 10);
  }

  .#{$grid-breakpoint-type}seven-tenths {
    width: percentage(7 / 10);
  }

  .#{$grid-breakpoint-type}eight-tenths {
    width: percentage(8 / 10);
  }

  .#{$grid-breakpoint-type}nine-tenths {
    width: percentage(9 / 10);
  }

  /* Twelfths */
  .#{$grid-breakpoint-type}one-twelfth {
    width: percentage(1 / 12);
  }

  .#{$grid-breakpoint-type}two-twelfths {
    width: percentage(2 / 12);
  }

  .#{$grid-breakpoint-type}three-twelfths {
    width: percentage(3 / 12);
  }

  .#{$grid-breakpoint-type}four-twelfths {
    width: percentage(4 / 12);
  }

  .#{$grid-breakpoint-type}five-twelfths {
    width: percentage(5 / 12);
  }

  .#{$grid-breakpoint-type}six-twelfths {
    width: percentage(6 / 12);
  }

  .#{$grid-breakpoint-type}seven-twelfths {
    width: percentage(7 / 12);
  }

  .#{$grid-breakpoint-type}eight-twelfths {
    width: percentage(8 / 12);
  }

  .#{$grid-breakpoint-type}nine-twelfths {
    width: percentage(9 / 12);
  }

  .#{$grid-breakpoint-type}ten-twelfths {
    width: percentage(10 / 12);
  }

  .#{$grid-breakpoint-type}eleven-twelfths {
    width: percentage(11 / 12);
  }
}

/* ================ Grid push classes ================ */

@mixin grid-push-generator($grid-breakpoint-type: '') {

  /* Halves */
  .#{$grid-breakpoint-type}push-one-half {
    left: percentage(1 / 2);
  }

  /* Thirds */
  .#{$grid-breakpoint-type}push-one-third {
    left: percentage(1 / 3);
  }

  .#{$grid-breakpoint-type}push-two-thirds {
    left: percentage(2 / 3);
  }

  /* Quarters */
  .#{$grid-breakpoint-type}push-one-quarter {
    left: percentage(1 / 4);
  }

  .#{$grid-breakpoint-type}push-two-quarters {
    left: percentage(2 / 4);
  }

  .#{$grid-breakpoint-type}push-three-quarters {
    left: percentage(3 / 4);
  }

  /* Fifths */
  .#{$grid-breakpoint-type}push-one-fifth {
    left: percentage(1 / 5);
  }

  .#{$grid-breakpoint-type}push-two-fifths {
    left: percentage(2 / 5);
  }

  .#{$grid-breakpoint-type}push-three-fifths {
    left: percentage(3 / 5);
  }

  .#{$grid-breakpoint-type}push-four-fifths {
    left: percentage(4 / 5);
  }

  /* Sixths */
  .#{$grid-breakpoint-type}push-one-sixth {
    left: percentage(1 / 6);
  }

  .#{$grid-breakpoint-type}push-two-sixths {
    left: percentage(2 / 6);
  }

  .#{$grid-breakpoint-type}push-three-sixths {
    left: percentage(3 / 6);
  }

  .#{$grid-breakpoint-type}push-four-sixths {
    left: percentage(4 / 6);
  }

  .#{$grid-breakpoint-type}push-five-sixths {
    left: percentage(5 / 6);
  }

  /* Eighths */
  .#{$grid-breakpoint-type}push-one-eighth {
    left: percentage(1 / 8);
  }

  .#{$grid-breakpoint-type}push-two-eighths {
    left: percentage(2 / 8);
  }

  .#{$grid-breakpoint-type}push-three-eighths {
    left: percentage(3 / 8);
  }

  .#{$grid-breakpoint-type}push-four-eighths {
    left: percentage(4 / 8);
  }

  .#{$grid-breakpoint-type}push-five-eighths {
    left: percentage(5 / 8);
  }

  .#{$grid-breakpoint-type}push-six-eighths {
    left: percentage(6 / 8);
  }

  .#{$grid-breakpoint-type}push-seven-eighths {
    left: percentage(7 / 8);
  }

  /* Tenths */
  .#{$grid-breakpoint-type}push-one-tenth {
    left: percentage(1 / 10);
  }

  .#{$grid-breakpoint-type}push-two-tenths {
    left: percentage(2 / 10);
  }

  .#{$grid-breakpoint-type}push-three-tenths {
    left: percentage(3 / 10);
  }

  .#{$grid-breakpoint-type}push-four-tenths {
    left: percentage(4 / 10);
  }

  .#{$grid-breakpoint-type}push-five-tenths {
    left: percentage(5 / 10);
  }

  .#{$grid-breakpoint-type}push-six-tenths {
    left: percentage(6 / 10);
  }

  .#{$grid-breakpoint-type}push-seven-tenths {
    left: percentage(7 / 10);
  }

  .#{$grid-breakpoint-type}push-eight-tenths {
    left: percentage(8 / 10);
  }

  .#{$grid-breakpoint-type}push-nine-tenths {
    left: percentage(9 / 10);
  }

  /* Twelfths */
  .#{$grid-breakpoint-type}push-one-twelfth {
    left: percentage(1 / 12);
  }

  .#{$grid-breakpoint-type}push-two-twelfths {
    left: percentage(2 / 12);
  }

  .#{$grid-breakpoint-type}push-three-twelfths {
    left: percentage(3 / 12);
  }

  .#{$grid-breakpoint-type}push-four-twelfths {
    left: percentage(4 / 12);
  }

  .#{$grid-breakpoint-type}push-five-twelfths {
    left: percentage(5 / 12);
  }

  .#{$grid-breakpoint-type}push-six-twelfths {
    left: percentage(6 / 12);
  }

  .#{$grid-breakpoint-type}push-seven-twelfths {
    left: percentage(7 / 12);
  }

  .#{$grid-breakpoint-type}push-eight-twelfths {
    left: percentage(8 / 12);
  }

  .#{$grid-breakpoint-type}push-nine-twelfths {
    left: percentage(9 / 12);
  }

  .#{$grid-breakpoint-type}push-ten-twelfths {
    left: percentage(10 / 12);
  }

  .#{$grid-breakpoint-type}push-eleven-twelfths {
    left: percentage(11 / 12);
  }
}

/* ================ Clearfix helper on uniform grids ================ */

@mixin grid-uniform-clearfix($grid-breakpoint-type: '') {
  .grid--uniform {
    .#{$grid-breakpoint-type}one-half:nth-child(2n + 1),
    .#{$grid-breakpoint-type}one-third:nth-child(3n + 1),
    .#{$grid-breakpoint-type}one-quarter:nth-child(4n + 1),
    .#{$grid-breakpoint-type}one-fifth:nth-child(5n + 1),
    .#{$grid-breakpoint-type}one-sixth:nth-child(6n + 1),
    .#{$grid-breakpoint-type}two-sixths:nth-child(3n + 1),
    .#{$grid-breakpoint-type}three-sixths:nth-child(2n + 1),
    .#{$grid-breakpoint-type}one-eighth:nth-child(8n + 1),
    .#{$grid-breakpoint-type}two-eighths:nth-child(4n + 1),
    .#{$grid-breakpoint-type}four-eighths:nth-child(2n + 1),
    .#{$grid-breakpoint-type}five-tenths:nth-child(2n + 1),
    .#{$grid-breakpoint-type}one-twelfth:nth-child(12n + 1),
    .#{$grid-breakpoint-type}two-twelfths:nth-child(6n + 1),
    .#{$grid-breakpoint-type}three-twelfths:nth-child(4n + 1),
    .#{$grid-breakpoint-type}four-twelfths:nth-child(3n + 1),
    .#{$grid-breakpoint-type}six-twelfths:nth-child(2n + 1) {
      clear: both;
    }
  }
}

// sass-lint:enable brace-style empty-line-between-blocks

/* ================ Build Base Grid Classes ================ */

@include grid-column-generator();

@include responsive-display-helper();

@include responsive-text-align-helper();

/* ================ Build Responsive Grid Classes ================ */

@each $breakpoint in $grid-breakpoint-has-widths {
  @include media-query($breakpoint) {
    @include grid-column-generator('#{$breakpoint}--');

    @include grid-uniform-clearfix('#{$breakpoint}--');

    @include responsive-display-helper('#{$breakpoint}--');

    @include responsive-text-align-helper('#{$breakpoint}--');
  }
}

/* ================ Build Grid Push Classes ================ */

@each $breakpoint in $grid-breakpoint-has-push {
  @include media-query($breakpoint) {
    @include grid-push-generator('#{$breakpoint}--');
  }
}
